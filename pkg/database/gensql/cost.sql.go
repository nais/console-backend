// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0
// source: cost.sql

package gensql

import (
	"context"
)

const getCost = `-- name: GetCost :many
SELECT env, team, app, service_description, dato, cost FROM cost
`

func (q *Queries) GetCost(ctx context.Context) ([]*Cost, error) {
	rows, err := q.db.Query(ctx, getCost)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []*Cost
	for rows.Next() {
		var i Cost
		if err := rows.Scan(
			&i.Env,
			&i.Team,
			&i.App,
			&i.ServiceDescription,
			&i.Dato,
			&i.Cost,
		); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
