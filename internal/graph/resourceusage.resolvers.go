package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"
	"time"

	"github.com/nais/console-backend/internal/graph/model"
	"github.com/nais/console-backend/internal/graph/scalar"
)

// ResourceUtilizationForApp is the resolver for the resourceUtilizationForApp field.
func (r *queryResolver) ResourceUtilizationForApp(ctx context.Context, resource model.ResourceType, env string, team string, app string, from *scalar.Date, to *scalar.Date) ([]model.ResourceUtilization, error) {
	end := time.Now()
	start := end.Add(-24 * time.Hour * 6)

	var err error
	if to != nil {
		end, err = to.Time()
		if err != nil {
			return nil, err
		}
	}

	if from != nil {
		start, err = from.Time()
		if err != nil {
			return nil, err
		}
	}

	util, err := r.resourceUsageClient.UtilizationForApp(ctx, resource, env, team, app, start, end)
	if err != nil {
		return nil, err
	}

	ret := make([]model.ResourceUtilization, 0)
	for _, u := range util {
		ret = append(ret, model.ResourceUtilization{
			Usage:   u.Usage,
			Request: u.Request,
		})
	}
	return ret, nil
}
