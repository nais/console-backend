package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"
	"time"

	"github.com/nais/console-backend/internal/graph/model"
	"github.com/nais/console-backend/internal/graph/scalar"
)

// ResourceUtilizationForApp is the resolver for the resourceUtilizationForApp field.
func (r *queryResolver) ResourceUtilizationForApp(ctx context.Context, resource model.ResourceType, env string, team string, app string, from *scalar.Date, to *scalar.Date) ([]model.ResourceUtilization, error) {
	start, end, err := r.getStartAndEnd(from, to)
	if err != nil {
		return nil, err
	}

	var resolution *model.Resolution
	duration := end.Sub(start)

	if duration > 7*24*time.Hour {
		res := model.ResolutionDaily
		resolution = &res
	} else {
		res := model.ResolutionHourly
		resolution = &res
	}

	step := 24 * time.Hour

	if *resolution == model.ResolutionHourly {
		step = time.Hour
	}

	return r.resourceUsageClient.UtilizationForApp(ctx, resource, *resolution, env, team, app, start, end, step)
}
