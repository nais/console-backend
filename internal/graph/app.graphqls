type AppConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [AppEdge!]!
}
type AppEdge {
  cursor: Cursor!
  node: App!
}

type Instance implements Node {
  id: ID!
  name: String!
  status: String!
}

type External {
  host: String!
}

type Rule {
  application: String!
  namespace: String!
}

type Inbound {
  rules: [Rule!]!
}

type Outbound {
  rules: [Rule!]!
  external: [External!]!
}

type AccessPolicy {
  inbound: Inbound!
  outbound: Outbound!
}

type App implements Node {
  id: ID!
  name: String!
  image: String!
  env: Env!
  instances: [Instance!]!
  accessPolicy: AccessPolicy!
  #  auhtz: [Authz!]!
  #  autoScaling: AutoScaling!
  #  deploys: [Deploy!]!
  #  ingresses: [Ingress!]!
  #  manifest: Spec!
  #  networking: [Networking!]!
  #  storage: [Storage!]!
  #  variables: [Variable!]!
}
