extend type Mutation {
  "Update the deploy key of a team. Returns the updated deploy key."
  changeDeployKey(
    "The name of the team to update the deploy key for."
    team: String!
  ): DeploymentKey!
}

extend type Team @key(fields: "slug") {
  "The unique identifier of the team."
  id: ID! @external
  "The unique slug of the team."
  slug: String! @external

  "The status of the team."
  status: TeamStatus! @goField(forceResolver: true)

  "The NAIS applications owned by the team."
  apps(
    "Returns the first n entries from the list."
    offset: Int

    "Returns the last n entries from the list."
    limit: Int

    "Order apps by"
    orderBy: OrderBy
  ): AppList! @goField(forceResolver: true)

  "The deploy key of the team."
  deployKey: DeploymentKey! @goField(forceResolver: true)

  "The NAIS jobs owned by the team."
  naisjobs(
    "Returns the first n entries from the list."
    offset: Int

    "Returns the last n entries from the list."
    limit: Int

    "Order naisjobs by"
    orderBy: OrderBy
  ): NaisJobList! @goField(forceResolver: true)

  "The deployments of the team's applications."
  deployments(
    "Returns the first n entries from the list."
    offset: Int

    "Limit the number of entries returned."
    limit: Int
  ): DeploymentList! @goField(forceResolver: true)

  "Whether or not the viewer is a member of the team."
  viewerIsMember: Boolean! @goField(forceResolver: true)

  "Whether or not the viewer is an administrator of the team."
  viewerIsAdmin: Boolean! @goField(forceResolver: true)

  "The vulnerabilities for the team's applications."
  vulnerabilities(
    "Returns the first n entries from the list."
    offset: Int

    "Returns the last n entries from the list."
    limit: Int

    "Order apps by"
    orderBy: OrderBy
  ): VulnerabilityList! @goField(forceResolver: true)

  vulnerabilitiesSummary: VulnerabilitySummary! @goField(forceResolver: true)
}

"Team status."
type TeamStatus {
  apps: AppsStatus!
  jobs: JobsStatus!
}

"Team status for apps."
type AppsStatus {
  total: Int!
  failing: Int!
}

"Team status for jobs."
type JobsStatus {
  total: Int!
  failing: Int!
}

"Deployment key type."
type DeploymentKey {
  "The unique identifier of the deployment key."
  id: ID!

  "The actual key."
  key: String!

  "The date the deployment key was created."
  created: Time!

  "The date the deployment key expires."
  expires: Time!
}
type VulnerabilityList {
  nodes: [Vulnerability!]!
  pageInfo: PageInfo!
}
