type TeamConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [TeamEdge!]!
}

type TeamEdge {
  cursor: Cursor!
  node: Team!
}

type TeamMemberConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [TeamMemberEdge!]!
}
type TeamMemberEdge {
  cursor: Cursor!
  node: TeamMember!
}

type Team implements Node {
  id: ID!
  name: String!
  description: String
  members(first: Int, after: Cursor): TeamMemberConnection!
  apps(first: Int, after: Cursor): AppConnection!
  githubRepositories(first: Int, after: Cursor): GithubRepositoryConnection!
  slackChannel: String
  slackAlertsChannels: [SlackAlertsChannel!]
  deployments(first: Int, after: Cursor): DeploymentConnection!
  deployKey: DeploymentKey!
}

type DeploymentKey {
  key: String!
  created: Time!
  expires: Time!
}

type GithubRepositoryConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [GithubRepositoryEdge!]!
}

type GithubRepositoryEdge {
  cursor: Cursor!
  node: GithubRepository!
}

type GithubRepository {
  name: String!
}

type SlackAlertsChannel {
  name: String!
  env: String!
}

type TeamMember implements Node {
  id: ID!
  name: String!
  email: String!
  role: String!
}

extend type Query {
  teams(first: Int, after: Cursor): TeamConnection!
  team(name: String!): Team!
}

type Mutation {
  changeDeployKey(team: String!): DeploymentKey!
}
