extend type Query {
    resourceUtilizationOverageForTeam(
        "The team to fetch data for."
        team: String!

        "Fetch resource utilization from this date. Defaults to 7 days before the to date."
        from: Date

        "Fetch resource utilization until this date. Defaults to today."
        to: Date
    ): ResourceUtilizationOverageForTeam!

    "Get the resource utilization for a team across all environments."
    resourceUtilizationForTeam(
        "The team to fetch data for."
        team: String!

        "Fetch resource utilization from this date. Defaults to 7 days before the to date."
        from: Date

        "Fetch resource utilization until this date. Defaults to today."
        to: Date
    ): [ResourceUtilizationForEnv!]!

    "Get the date range for resource utilization for a team across all environments."
    resourceUtilizationDateRangeForTeam(
        "The name of the team."
        team: String!
    ): ResourceUtilizationDateRange!

    "Get the date range for resource utilization for an app."
    resourceUtilizationDateRangeForApp(
        env: String!
        team: String!
        app: String!
    ): ResourceUtilizationDateRange!

    "Get the resource utilization for an app."
    resourceUtilizationForApp(
        "The environment where the app is running."
        env: String!

        "The team who owns the app."
        team: String!

        "Optional name of an app."
        app: String!

        "Fetch resource utilization from this date. Defaults to 7 days before the to date."
        from: Date

        "Fetch resource utilization until this date. Defaults to today."
        to: Date
    ): ResourceUtilizationForApp!
}

"Date range type."
type ResourceUtilizationDateRange {
    "The start of the range."
    from: Date

    "The end of the range."
    to: Date
}

type ResourceUtilizationOverageForTeam {
    sum: Float!
    apps: [AppWithResourceUtilizationOverage!]!
}

type AppWithResourceUtilizationOverage {
    team: String!
    app: String!
    env: String!
    overage: Float!
}

"Resource utilization for env type."
type ResourceUtilizationForEnv {
    "Name of the environment."
    env: String!

    "CPU resource utilization data for the environment."
    cpu: [ResourceUtilization!]!

    "Memory resource utilization data for the environment."
    memory: [ResourceUtilization!]!
}

"Resource utilization for app type."
type ResourceUtilizationForApp {
    "CPU resource utilization data for the environment."
    cpu: [ResourceUtilization!]!

    "Memory resource utilization data for the environment."
    memory: [ResourceUtilization!]!
}

"Resource utilization type."
type ResourceUtilization {
    "Resource type."
    resource: ResourceType!

    "Timestamp of the value."
    timestamp: Time!

    "The requested resource amount per pod."
    request: Float!

    "The cost associated with the requested resource amount."
    requestCost: Float!

    "The actual resource usage."
    usage: Float!

    "The cost associated with the actual resource usage."
    usageCost: Float!

    "The overage of the requested resource amount."
    requestCostOverage: Float!
}

"Resource type."
enum ResourceType {
    CPU
    MEMORY
}