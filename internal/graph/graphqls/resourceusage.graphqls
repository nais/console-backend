extend type Query {
    "Get the resource utilization for a team."
    resourceUtilizationForTeam(
        "Resource type."
        resource: ResourceType!

        "The team to fetch data for."
        team: String!

        "Fetch resource utilization from this date. Defaults to 7 days before the to date."
        from: Date

        "Fetch resource utilization until this date. Defaults to today."
        to: Date
    ): [ResourceUtilizationInEnv!]!

    "Get the resource utilization for an app."
    resourceUtilizationForApp(
        "Resource type."
        resource: ResourceType!

        "The environment where the app is running."
        env: String!

        "The team who owns the app."
        team: String!

        "Optional name of an app."
        app: String!

        "Fetch resource utilization from this date. Defaults to 7 days before the to date."
        from: Date

        "Fetch resource utilization until this date. Defaults to today."
        to: Date
    ): [ResourceUtilization!]!
}

"ResourceUtilization in env type."
type ResourceUtilizationInEnv {
    "Name of the environment."
    env: String!

    "Resource utilization data for the environment."
    data: [ResourceUtilization!]!
}

"Resource utilization type."
type ResourceUtilization {
    "Resource type."
    resource: ResourceType!

    "Timestamp of the value."
    timestamp: Time!

    "The requested resource amount per pod."
    request: Float!

    "The cost associated with the requested resource amount."
    requestCost: Float!

    "The actual resource usage."
    usage: Float!

    "The cost associated with the actual resource usage."
    usageCost: Float!

    "The overage of the requested resource amount."
    requestCostOverage: Float!
}

"Resource type."
enum ResourceType {
    CPU
    MEMORY
}

"Resolution type."
enum Resolution {
    DAILY
    HOURLY
}
