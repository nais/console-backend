type AppConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [AppEdge!]!
}

type AppEdge {
  cursor: Cursor!
  node: App!
}

type Manifest {
  data: String!
}

type App implements Node {
  id: ID!
  name: String!
  image: String!
  deployed: Time
  env: Env!
  ingresses: [String!]!
  instances: [Instance!]!
  accessPolicy: AccessPolicy!
  resources: Resources!
  deploys(first: Int, after: Cursor): DeploymentConnection!
  autoScaling: AutoScaling!
  storage: [Storage!]!
  variables: [Variable!]!
  authz: [Authz!]!
  manifest: Manifest!
  #  networking: [Networking!]!
}

extend type Query {
  app(name: String!, team: String!, env: String!): App!
}
