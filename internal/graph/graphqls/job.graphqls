type JobConnection {
  edges: [JobEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type JobEdge {
  cursor: Cursor!
  node: Job!
}

type JobInstance implements Node {
  id: ID!
  name: String!
  startTime: Time!
  completionTime: Time
  active: Int! # The number of pending and running pods.
  failed: Int! # The number of pods which reached phase Failed
  succeeded: Int! # The number of pods which reached phase Succeeded.
  runDuration: String
  statusMessage: String # Human readable message indicating details about last transition.
  statusReason: String # (brief) reason for the condition's last transition.
  statusType: String # Type of job condition, Complete or Failed.
}

type Job implements Node {
  id: ID!
  accessPolicy: AccessPolicy!
  deployInfo: DeployInfo!
  env: Env!
  image: String!
  instances: [JobInstance!]!
  manifest: String!
  name: String!
  resources: Resources!
  schedule: String!
  team: Team!
}

enum ConcurrencyPolicy {
  ALLOW
  FORBID
  REPLACE
}

extend type Query {
  job(name: String!, team: String!, env: String!): Job!
}
