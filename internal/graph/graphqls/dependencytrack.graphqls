extend type Query {
    vulnerabilitiesForTeam(
        "The name of the team to get vulnerabilities for."
        team: String!

        "Returns the first n entries from the list."
        first: Int

        "Returns the last n entries from the list."
        last: Int

        "Get entries after the cursor."
        after: Cursor

        "Get entries before the cursor."
        before: Cursor

        "Order apps by"
        orderBy: AppsOrderBy

    ): [DependencyTrack]!
}

input AppsOrderBy {
    "Order direction"
    direction: Sort
    field: AppsOrderByField
}

enum AppsOrderByField {
    "Order apps by name."
    NAME
    "Order apps by vulnerability severity critical"
    SEVERITY_CRITICAL
    "Order apps by vulnerability severity high"
    SEVERITY_HIGH
    "Order apps by vulnerability severity medium"
    SEVERITY_MEDIUM
    "Order apps by vulnerability severity low"
    SEVERITY_LOW
}

enum Sort {
    "Ascending sort order."
    ASC

    "Descending sort order."
    DESC
}


type DependencyTrack {
    projectUUID: String!
    projectName: String!
    findingsLink: String!
    vulnerabilities: [Vulnerability!]
    summary: VulnerabilitySummary!
}

type VulnerabilitySummary {
    total: Int!
    critical: Int!
    high: Int!
    medium: Int!
    low: Int!
    unassigned: Int!
}

type Vulnerability {
    id: String!
    severity: String!
    severityRank: Int!
    name: String!
    componentPurl: String!
}
