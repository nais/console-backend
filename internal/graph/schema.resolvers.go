package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.30

import (
	"context"
	"fmt"

	"github.com/nais/console-backend/internal/graph/model"
)

// Node is the resolver for the node field.
func (r *queryResolver) Node(ctx context.Context, id model.Ident) (model.Node, error) {
	fmt.Println("this be ID", id)
	switch id.Type {
	case "user":
		u, err := r.Console.GetUserByID(ctx, id.ID)
		if err != nil {
			return nil, fmt.Errorf("getting user from Console: %w", err)
		}
		return u, nil
	}
	return nil, fmt.Errorf("unknown type %q", id.Type)
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
