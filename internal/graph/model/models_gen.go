// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type Node interface {
	IsNode()
	GetID() string
}

type AutoScaling struct {
	DisableAutoScaling     bool `json:"disableAutoScaling"`
	CPUThresholdPercentage int  `json:"cpuThresholdPercentage"`
	Max                    int  `json:"max"`
	Min                    int  `json:"min"`
}

type Env struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

func (Env) IsNode()            {}
func (this Env) GetID() string { return this.ID }

type GithubRepository struct {
	Name string `json:"name"`
}

type GithubRepositoryConnection struct {
	TotalCount int                     `json:"totalCount"`
	PageInfo   *PageInfo               `json:"pageInfo"`
	Edges      []*GithubRepositoryEdge `json:"edges"`
}

type GithubRepositoryEdge struct {
	Cursor Cursor            `json:"cursor"`
	Node   *GithubRepository `json:"node"`
}

type Instance struct {
	ID       string    `json:"id"`
	Name     string    `json:"name"`
	Status   string    `json:"status"`
	Image    string    `json:"image"`
	Restarts int       `json:"restarts"`
	Created  time.Time `json:"created"`
}

func (Instance) IsNode()            {}
func (this Instance) GetID() string { return this.ID }

type PageInfo struct {
	HasNextPage     bool    `json:"hasNextPage"`
	HasPreviousPage bool    `json:"hasPreviousPage"`
	StartCursor     *Cursor `json:"startCursor,omitempty"`
	EndCursor       *Cursor `json:"endCursor,omitempty"`
}
