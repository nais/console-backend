// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Node interface {
	IsNode()
	GetID() string
}

type Env struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

func (Env) IsNode()            {}
func (this Env) GetID() string { return this.ID }

type GithubRepository struct {
	Name string `json:"name"`
}

type GithubRepositoryConnection struct {
	TotalCount int                     `json:"totalCount"`
	PageInfo   *PageInfo               `json:"pageInfo"`
	Edges      []*GithubRepositoryEdge `json:"edges"`
}

type GithubRepositoryEdge struct {
	Cursor Cursor            `json:"cursor"`
	Node   *GithubRepository `json:"node"`
}

type Inbound struct {
	Rules []*Rule `json:"rules"`
}

type Instance struct {
	ID     string `json:"id"`
	Name   string `json:"name"`
	Status string `json:"status"`
}

func (Instance) IsNode()            {}
func (this Instance) GetID() string { return this.ID }

type Outbound struct {
	Rules    []*Rule     `json:"rules"`
	External []*External `json:"external"`
}

type PageInfo struct {
	HasNextPage     bool    `json:"hasNextPage"`
	HasPreviousPage bool    `json:"hasPreviousPage"`
	StartCursor     *Cursor `json:"startCursor,omitempty"`
	EndCursor       *Cursor `json:"endCursor,omitempty"`
}

type Port struct {
	Port int `json:"port"`
}

type Rule struct {
	Application string `json:"application"`
	Namespace   string `json:"namespace"`
}
