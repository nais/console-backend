package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	"github.com/nais/console-backend/internal/auth"
	"github.com/nais/console-backend/internal/graph/apierror"
	"github.com/nais/console-backend/internal/graph/model"
	"github.com/nais/console-backend/internal/graph/scalar"
)

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context) (*model.User, error) {
	email, err := auth.GetEmail(ctx)
	if err != nil {
		return nil, apierror.ErrNoEmailInSession
	}

	user, err := r.teamsClient.GetSelf(ctx)
	if err != nil {
		return nil, apierror.ErrUserNotFound(email)
	}

	return &model.User{
		ID:    scalar.UserIdent(user.ID.String()),
		Name:  user.Name,
		Email: email,
	}, nil
}
