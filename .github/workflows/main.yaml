name: Build and push image and chart
on:
  push:
    branches:
      - main
env:
  NAME: console-backend
  IMAGE_REPOSITORY: oci://europe-north1-docker.pkg.dev/nais-io/nais
jobs:
  go_version:
    outputs:
      go_version: ${{ steps.go_version.outputs.GO_VERSION }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Find Go version
        id: go_version
        run: |
          echo "GO_VERSION=$(grep golang .tool-versions | awk '{print $2}')" >> $GITHUB_OUTPUT

  build_push:
    needs:
      - go_version
    outputs:
      version: ${{ steps.build-push-sign.outputs.version }}
    permissions:
      contents: read
      id-token: write
    name: Build and push
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: nais/platform-build-push-sign@main
        id: build-push-sign
        with:
          name: ${{ env.NAME }}
          build_args: |
            GO_VERSION=${{ needs.go_version.outputs.go_version }}
          google_service_account: gh-${{ env.NAME }}
          workload_identity_provider: ${{ secrets.NAIS_IO_WORKLOAD_IDENTITY_PROVIDER }}
          push: true
      - uses: azure/setup-helm@v3
        name: Setup Helm
        with:
          version: "3.12.0"
      - name: Build Chart
        run: |-
          sed -i "s/^version: .*/version: ${{ steps.build-push-sign.outputs.version }}/g" charts/Chart.yaml
          cat charts/Chart.yaml
          helm package charts
      - name: Push Chart
        run: |-
          helm push ${{ env.NAME }}*.tgz ${{ env.IMAGE_REPOSITORY }}
  test:
    needs:
      - go_version
    name: Run tests and static code analysis
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ needs.go_version.outputs.go_version }}
          check-latest: true
      - run: go mod download
      - run: make check
      - run: make test
  rollout:
    needs:
      - build_push
      - test
    runs-on: fasit-deploy
    permissions:
      id-token: write
    steps:
      - uses: nais/fasit-deploy@v2
        with:
          chart: ${{ env.IMAGE_REPOSITORY }}/${{ env.NAME }}
          version: ${{ needs.build_push.outputs.version }}
