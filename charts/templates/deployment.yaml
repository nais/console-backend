apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Release.Name }}"
  template:
    metadata:
      annotations:
        prometheus.io/path: "/metrics"
        kubectl.kubernetes.io/default-container: "{{ .Chart.Name }}"
      labels:
        app: "{{ .Release.Name }}"
    spec:
      serviceAccountName: "{{ .Release.Name }}"
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.33.11 # make sure the use the latest version
          command:
            - "/cloud_sql_proxy"
            - "-log_debug_stdout"
            - "-instances={{ .Values.database.instance }}=tcp:5432"
            - "-enable_iam_login"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              memory: "256Mi"
              cpu: "0.22"
        - name: "{{ .Chart.Name }}"
          env:
            - name: KUBERNETES_CLUSTERS
              value: "{{ .Values.kubernetes.clusters }}"
            {{- if .Values.kubernetes.static }}
            - name: KUBERNETES_CLUSTERS_STATIC
              value: "{{ .Values.kubernetes.static }}"
            {{- end }}
            - name: IAP_AUDIENCE
              value: "{{ .Values.audience }}"
            - name: TENANT
              value: "{{ .Values.fasit.tenant.name }}"
            - name: FIELD_SELECTOR
              value: "{{ .Values.fieldSelector }}"
            - name: CONSOLE_DATABASE_URL
              value: "postgres://{{ .Values.database.user }}@127.0.0.1:5432/{{ .Values.database.name }}?sslmode=disable"
            - name: COST_DATA_DAYS_TO_FETCH
              value: "5"
            - name: COST_DATA_REIMPORT
              value: "false"

          envFrom:
            - secretRef:
                name: "{{ .Release.Name }}"
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1069
            allowPrivilegeEscalation: false
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Chart.Version }}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: "{{ .Values.resources.cpu }}"
              memory: "{{ .Values.resources.memory }}"
            requests:
              cpu: "{{ .Values.resources.cpu }}"
              memory: "{{ .Values.resources.memory }}"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
